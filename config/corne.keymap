/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/pointing.h>


#define HYPER (LG(LS(LA(LCTRL))))

/ {
		behaviors {
			rpi: require_prior_idle {
			    compatible = "zmk,behavior-hold-tap";
			    #binding-cells = <2>;
			    flavor = "tap-preferred";
			    tapping-term-ms = <200>;
			    quick-tap-ms = <200>;
			    require-prior-idle-ms = <125>;
			    bindings = <&kp>, <&kp>;
			};
			rpil: layer_tap_custom {
			    compatible = "zmk,behavior-hold-tap";
			    #binding-cells = <2>;
			    flavor = "tap-preferred";
			    tapping-term-ms = <200>;
			    quick-tap-ms = <200>;
			    require-prior-idle-ms = <125>;
			    bindings = <&mo>, <&kp>;
			};
		};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W/Ctrl    |  E/Alt    |  R/Cmd    |  T      |   |  Y  | U/Cmd     |  I/Alt    |  O/Ctrl    |  P     |      |
// |      |  A  |  S/L5      |  D/L4     |  F/L3     |  G      |   |  H  | J/L3      |  K/L4     |  L/L5      |  ;     |      |
// |      |  Z  |  X         |  C        |  V        |  B      |   |  N  | M         |  ,        |  .         |  /     |      |
//                           | ESC       | SHF       | SPC     |   | L 1 | L 2       | BSP       |
                        bindings = <
    &trans &kp Q &rpi LCTRL W &rpi LALT E &rpi LCMD R &kp T         &kp Y &rpi LCMD U &rpi LALT I &rpi LCTRL O &kp P    &trans
    &trans &kp A &rpil 5 S    &rpil 4 D   &rpil 3 F   &kp G         &kp H &rpil 3 J   &rpil 4 K   &rpil 5 L    &kp SEMI &trans
    &trans &kp Z &kp X        &kp C       &kp V       &kp B         &kp N &kp M       &kp COMMA   &kp DOT      &kp FSLH &trans
                              &kp ESC     &sk LSHIFT  &kp SPACE     &sl 1 &sl 2       &kp BSPC
                        >;
                };
                sym {
// -----------------------------------------------------------------------------------------
// |      |  ^      |  <      |  =      |  >      |  #      |   |  `       |  [     |  "     |  ]      |  !      |      |
// |      |  /      |  @      |  &      |  -      |  +      |   |  '       |  (     |  :     |  )      |  ;      |      |
// |      |  \      |  _      |  *      |  ~      |  %      |   |  $       |  {     |  |     |  }      |  ?      |      |
//                            |         |         |         |   |          |        |        |
                        bindings = <
   &trans  &kp CRRT  &kp LT    &kp EQUAL &kp GT    &kp HASH       &kp GRAVE &kp LBKT &kp DQT  &kp RBKT  &kp EXCL  &trans
   &trans  &kp SLASH &kp AT    &kp AMPS  &kp MINUS &kp PLUS       &kp SQT   &kp LPAR &kp COLN &kp RPAR  &kp SEMI  &trans
   &trans  &kp BSLH  &kp UNDER &kp ASTRK &kp TILDE &kp PRCNT      &kp DLLR  &kp LBRC &kp PIPE &kp RBRC  &kp QMARK &trans
                               &trans    &trans    &trans         &kp RET   &trans   &kp RALT
                        >;
                };

                nav {
// -----------------------------------------------------------------------------------------
// |      | TAB     |      |      |       |        |   | PGU    | DEL    | UP     | BSP     |       |      |
// |      | ESC     |      |      |       |        |   | PGD    | LEFT   | DOWN   | RGHT    | RET   |      |
// |      | HYPER   |      |      |       | CAPS   |   |        | HOME   |        | END     |       |      |
  //                       |      |       |        |   |        |        |        |
                        bindings = <
    &trans &kp TAB   &trans &trans  &trans &trans       &kp PGUP &kp DEL  &kp UP   &kp BSPC  &trans  &trans
    &trans &kp ESC   &trans &trans  &trans &trans       &kp PGDN &kp LEFT &kp DOWN &kp RIGHT &kp RET &trans
    &trans &sk HYPER &trans &trans  &trans &kp CAPS     &trans   &kp HOME &trans   &kp END   &trans  &trans
                            &trans  &trans &trans       &trans   &trans   &trans
                        >;
                };

                num {
// -----------------------------------------------------------------------------------------
// |      |       |      |      |       |        |   |   -     |   7    |   8    |    9    |       |      |
// |      |       |      |      |       |        |   |   ,     |   4    |   5    |    6    |       |      |
// |      |       |      |      |       |        |   |   .     |   1    |   2    |    3    |       |      |
//                       |      |       |        |   |         |   0    |        |
                        bindings = <
    &trans &trans  &trans &trans  &trans &trans       &kp MINUS &kp N7   &kp N8   &kp N9    &trans  &trans
    &trans &trans  &trans &trans  &trans &trans       &kp COMMA &kp N4   &kp N5   &kp N6    &trans  &trans
    &trans &trans  &trans &trans  &trans &trans       &kp DOT   &kp N1   &kp N2   &kp N3    &trans  &trans
                          &trans  &trans &trans       &trans    &kp N0   &trans
                        >;
                };

		        media {
// -----------------------------------------------------------------------------------------
// | BT 1       |       | VOLD     | MUTE     | VOLU     |        |   |              | ALT+LEFT     |              | ALT+RIGHT     |       |      |
// | BT 2       |       | PREV     | PLAY     | NEXT     |        |   |              |              |              |               |       |      |
// | BT 3       |       |          |          |          |        |   |              |              |              |               |       |      |
//                                 |          |          |        |   |              |              |              |
                        bindings = <
    &bt BT_SEL 0 &trans  &kp VOLD   &kp K_MUTE &kp VOLU   &trans       &trans         &kp LA(LEFT)   &trans         &kp LA(RIGHT)   &trans  &trans
    &bt BT_SEL 1 &trans  &kp C_PREV &kp C_PP   &kp C_NEXT &trans       &trans         &trans         &trans         &trans          &trans  &trans
    &bt BT_SEL 2 &trans  &trans     &trans     &trans     &trans       &trans         &trans         &trans         &trans          &trans  &trans
                                    &trans     &trans     &trans       &trans         &trans         &trans
                        >;
                };

// TODO: Currently compiled out because it causes compiler errors?!
//				mouse {
// -----------------------------------------------------------------------------------------
// |            |       |          |          |          |        |   | W_UP         | LCLICK       | MUP          | RCLICK        |       |      |
// |            |       |          |          |          |        |   | W_DOWN       | MLEFT        | MDOWN        | MRIGHT        |       |      |
// |            |       |          |          |          |        |   |              |              |              |               |       |      |
//                                 |          |          |        |   |              |              |              |
//                        bindings = <
//    &trans       &trans  &trans     &trans     &trans     &trans       &msc SCRL_UP   &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &trans  &trans
//    &trans       &trans  &trans     &trans     &trans     &trans       &msc SCRL_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans  &trans
//    &trans       &trans  &trans     &trans     &trans     &trans       &trans         &trans         &trans         &trans          &trans  &trans
//                                    &trans     &trans     &trans       &trans         &trans         &trans
//                        >;
//                };
        };
};

// BLUETOOTH
// &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
